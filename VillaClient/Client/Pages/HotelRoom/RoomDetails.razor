@page "/room-details"
@page "/room-details/{Id:int}"
@using Common;
@using Models;
@using System.Text.Json;
@using VillaClient.Client.Service.Iservice;
@using VillaClient.Shared.ViewModel;
@inject IJSRuntime JSRuntime
@inject IRoomService RoomService;
@inject IRoomOrderDetailsService RoomOrderDetailsService;

<PageTitle>Room Details</PageTitle>
<div class="detail-body">
    <div>
        <div class="headind">
            <div></div>
            <div class="back">
                <a href="rooms">Back to Rooms</a>
            </div>
        </div>
        <div class="details-data">
            @if (HotelBooking.OrderDetails.HotelRoomDto != null)
            {
                <div class="dann">
                    <div><img src="./room2.jpg" alt="hotel room picture" width="80%" height="50%"></div>
                    <div style="margin:3vh 3vw;"><span style="color:rgb(255, 145, 0) !important;font-size: larger;font-weight: bolder;">@PackageName</span> <br> <span style="color: beige;">@(
                        (MarkupString)Details
                        )</span></div>
                </div>
                <div class="hen">
                    <div></div>
                <div class="dann">
                    <div style="color: beige;text-align: left;">Max Occupancy: 6 Adult<br>Villa size: @Sqrt sqft</div>
                    <div style="margin:3vh 3vw;">
                            <span style="color:rgb(255, 145, 0) !important;font-size: 1.5rem;font-weight: bolder;">USD <u>@(Convert.ToDouble(Rate * HotelBooking.OrderDetails.HotelRoomDto.TotalDays).ToString("#,#.00;(#,#.00#)"))</u></span> <br> <span style="color: beige; ">Cost for @HotelBooking.OrderDetails.HotelRoomDto.TotalDays nights</span>
                    </div>
                </div>

                </div>
            }
            else
            {
                <h4 style="color:white;font-style:italic">Loading your room details, please wait...</h4>
            }
        </div>
    </div>

   

        <div>
            <div class="headind">
            <span style="color: beige;text-align: center;font-size: larger;font-weight: bolder;">Enter Details</span>
        </div>
        <div>
            @if (HotelBooking.OrderDetails.HotelRoomDto != null)
            {

                <EditForm Model="HotelBooking.OrderDetails" OnValidSubmit="HandleOrderCreation" class="details-dat">
                    <DataAnnotationsValidator/>
           
                <div>
                    <div style="color: rgb(255, 145, 0);margin: 2vh 0%;">Name</div>
                    <div>
                        <InputText @bind-Value="HotelBooking.OrderDetails.Name" style="height: 4vh;border-radius: 5px;outline: none;width: 95%;"></InputText>
                        <ValidationMessage For="(()=>HotelBooking.OrderDetails.Name)"></ValidationMessage>
                    </div>
                </div>
                <div>
                    <div style="color: rgb(255, 145, 0);margin: 2vh 0%;">Phone</div>
                    <div>
                        <InputText @bind-Value="HotelBooking.OrderDetails.Phone" style="height: 4vh;border-radius: 5px;outline: none;width: 95%;"></InputText>
                        <ValidationMessage For="(()=>HotelBooking.OrderDetails.Phone)"></ValidationMessage>
                    </div>
                </div><div>
                    <div style="color: rgb(255, 145, 0);margin: 2vh 0%;">Email</div>
                    <div>
                        <InputText @bind-Value="HotelBooking.OrderDetails.Email" style="height: 4vh;border-radius: 5px;outline: none;width: 95%;"></InputText>
                        <ValidationMessage For="(()=>HotelBooking.OrderDetails.Email)"></ValidationMessage>
                    </div>
                </div><div>
                    <div style="color: rgb(255, 145, 0);margin: 2vh 0%;">Check in Date</div>
                    <div>
                        <InputDate @bind-Value="HotelBooking.OrderDetails.CheckInDate" style="height: 4vh;border-radius: 5px;outline: none;width: 95%;color:white;" disabled></InputDate>
                        <ValidationMessage For="(()=>HotelBooking.OrderDetails.CheckInDate)"></ValidationMessage>
                    </div>
                </div>
                <div>
                    <div style="color: rgb(255, 145, 0);margin: 2vh 0%;">Check out Date</div>
                    <div>
                            <InputDate  @bind-Value="HotelBooking.OrderDetails.CheckOutDate" style="height: 4vh;border-radius: 5px;outline: none;width: 95%;color:white;" disabled></InputDate>
                        <ValidationMessage For="(()=>HotelBooking.OrderDetails.CheckOutDate)"></ValidationMessage>
                    </div>
                </div>
                <div>
                    <div style="color: rgb(255, 145, 0);margin: 2vh 0%;">Number of Night</div>
                    <div>
                           @* <select style="height: 4vh;border-radius: 5px;outline: none;width: 95%;" value="@NumberOfNight" @onchange="HandleNoOfNightChanged">
                                @for(var i = 1; i <=5; i++)
                                {
                                    if (i == NumberOfNight)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                }
                            </select>*@
                        <InputNumber @bind-Value="HotelBooking.OrderDetails.HotelRoomDto.TotalDays" style="height: 4vh;border-radius: 5px;outline: none;width: 95%;"></InputNumber>
                        <ValidationMessage For="(()=>HotelBooking.OrderDetails.HotelRoomDto.TotalDays)"></ValidationMessage>
                    </div>
                </div>
                <div class="checkoutNow">
                        @if (HotelBooking.OrderDetails.HotelRoomDto.IsBooked)
                        {   
                          <input disabled style="border: none;outline: none;font-weight: bolder;color: white;background-color: rgb(104, 167, 10);" type="submit" value="Sold out">
                        }
                        else
                        {       
                          <input style="border: none;outline: none;font-weight: bolder;color: white;background-color: rgb(104, 167, 10);" type="submit" value="Checkout Now">
                        }
                </div>
                </EditForm>
            }
            else
            {
                <h4 style="color:white;font-style:italic">Please wait...</h4>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }
    public HotelRoomBookingViewModel HotelBooking { get; set; } = new HotelRoomBookingViewModel();
    public int NumberOfNight { get; set; } = 1;
    public double TotalAmount { get; set; } 
    private string? PackageName { get; set; }
    private string? Details { get; set; }
    private string? Sqrt { get; set; }
    private double Rate { get; set; } = 0;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            HotelBooking = new HotelRoomBookingViewModel();
            HotelBooking.OrderDetails = new RoomOrderDetailDto();
            if(Id != null)
            {
                if(await JSRuntime.InvokeAsync<string>("localStorage.getItem", SD.Booking_View_Model) != null)
                {
                    var roomInitialinfo = await JSRuntime.InvokeAsync<string>("localStorage.getItem", SD.Booking_View_Model);
                    HomeVM datas = JsonSerializer.Deserialize<HomeVM>(roomInitialinfo);
                    HotelBooking.OrderDetails.HotelRoomDto = await RoomService.GetRoomDetails(Id.Value, datas.StartDate, datas.EndDate);
                    NumberOfNight = datas.NoOfNights;
                    HotelBooking.OrderDetails.CheckInDate = datas.StartDate;
                    HotelBooking.OrderDetails.CheckOutDate = datas.EndDate;
                    HotelBooking.OrderDetails.HotelRoomDto.TotalDays = datas.NoOfNights;
                    TotalAmount = datas.NoOfNights*HotelBooking.OrderDetails.HotelRoomDto.RegularRate;
                    PackageName = HotelBooking.OrderDetails.HotelRoomDto.Name;
                    Details = HotelBooking.OrderDetails.HotelRoomDto.Details;
                    Sqrt = HotelBooking.OrderDetails.HotelRoomDto.Sqft;
                    Rate = HotelBooking.OrderDetails.HotelRoomDto.RegularRate;

                    //string kk = JsonSerializer.Serialize(await RoomService.GetRoomDetails(Id.Value, datas.StartDate, datas.EndDate));
                    //await JSRuntime.InvokeVoidAsync("localStorage.setItem", "testing", kk);

                }
                else
                {
                    HotelBooking.OrderDetails.HotelRoomDto = await RoomService.GetRoomDetails(Id.Value, DateTime.Now, DateTime.Now);
                    NumberOfNight = 1;
                    HotelBooking.OrderDetails.CheckInDate = DateTime.Now;
                    HotelBooking.OrderDetails.CheckOutDate = DateTime.Now.AddDays(1);
                    HotelBooking.OrderDetails.HotelRoomDto.TotalDays = 1;
                    TotalAmount = HotelBooking.OrderDetails.HotelRoomDto.RegularRate;


                }

            }

        }
        catch(Exception ex)
        {
            throw;
        }
    }

    private async Task HandleNoOfNightChanged(ChangeEventArgs e)
    {
        NumberOfNight = Convert.ToInt32(e.Value.ToString());
        HotelBooking.OrderDetails.HotelRoomDto = await RoomService.GetRoomDetails(Id.Value, HotelBooking.OrderDetails.CheckInDate, HotelBooking.OrderDetails.CheckOutDate.AddDays(NumberOfNight));

        HotelBooking.OrderDetails.CheckOutDate = HotelBooking.OrderDetails.CheckInDate.AddDays(NumberOfNight);
        HotelBooking.OrderDetails.HotelRoomDto.TotalDays = NumberOfNight;
    }

    private async Task HandleOrderCreation()
    {
        try
        {

            //await Task.Delay(5000);
            HotelBooking.OrderDetails.RoomId = Id.Value;
            HotelBooking.OrderDetails.UserId = 1;
            HotelBooking.OrderDetails.CheckInDate = HotelBooking.OrderDetails.CheckInDate;
           // HotelBooking.OrderDetails.CheckInDate = HotelBooking.OrderDetails.CheckOutDate;
            //HotelBooking.OrderDetails.TotalCost = Convert.ToInt64(Rate * HotelBooking.OrderDetails.HotelRoomDto.TotalDays);
            var response = await RoomOrderDetailsService.CreateOrder(HotelBooking.OrderDetails);
            if (response.Id != null)
            {
                string result = JsonSerializer.Serialize(response);
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", SD.Booking_Order_Details, result);
            }
            else
            {
                throw new ArgumentException(response.Status);
                //throw new ArgumentException("that is it");
            }
        }
        catch(Exception ex)
        {
            throw new ArgumentException(ex.Message);
        }
    }
}
